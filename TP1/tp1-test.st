TestCase subclass: #BurbujaTest	instanceVariableNames: 'burbuja'	classVariableNames: ''	package: 'tp1-test'!!BurbujaTest methodsFor: 'running' stamp: 'Cristian 5/17/2021 13:29'!setUp	burbuja := Burbuja new.! !!BurbujaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 13:31'!test01BurbujaKeyEsElNombreDeLaBurbuja	burbuja nombre: 'grupo1'.		self assert:(burbuja key) equals: 'grupo1'.! !!BurbujaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test03BurbujaEstaPinchadaEsFalseSiNoHayUnaPersonaPositivo	|persona1|	persona1 := Persona new.	persona1 nuevoSintoma: 'Dolor de garganta' .	persona1 nuevoSintoma: 'Dolor de Cabeza' .	persona1 nuevoSintoma: 'Alergia' .			self assert:(persona1 diagnosticoResumido ) equals: 'Sospechoso'.		burbuja agregarA: persona1.		self deny: (burbuja estaPinchada ).	! !!BurbujaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test02BurbujaEstaPinchadaEsTrueSiHayUnaPersonaPositivo	|persona1|	persona1 := Persona new.	persona1 nuevoSintoma: 'Fiebre' .	persona1 nuevoSintoma: 'Dolor de Cabeza' .	persona1 nuevoSintoma: 'Alergia' .			self assert:(persona1 diagnosticoResumido ) equals: 'Positivo'.		burbuja agregarA: persona1.		self assert: (burbuja estaPinchada ).	! !!BurbujaTest methodsFor: 'tests' stamp: 'a 6/15/2021 18:29'!test04BurbujaConfinarPorCambiaElDiagnosticoDeLosOtroIntegrantes	|persona1 persona2 persona3|	persona1 := Persona new.	persona2 := Persona new.	persona3 := Persona new.		persona1 nuevoSintoma: 'Cansancio' .	persona1 nuevoSintoma: 'Dolor de Cabeza' .	persona1 nuevoSintoma: 'Alergia' .			self assert:(persona1 diagnosticoResumido ) equals: 'Positivo'.		burbuja agregarA: persona1.	burbuja agregarA: persona2.	burbuja agregarA: persona3.		persona2 vacunada.	persona3 vacunada.		self assert: (persona2 diagnosticoResumido )equals:'Sano'.	self assert: (persona3 diagnosticoResumido )equals:'Sano'.		burbuja confinarPor: persona1.		self assert: (persona2 diagnosticoResumido ) equals: 'Sospechoso'.	self assert: (persona3 diagnosticoResumido ) equals: 'Sospechoso'.		! !TestCase subclass: #ColegioTest	instanceVariableNames: 'colegio curso1 curso2 curso3'	classVariableNames: ''	package: 'tp1-test'!!ColegioTest methodsFor: 'running' stamp: 'Cristian 5/17/2021 14:14'!setUp	colegio := Colegio new.	curso1 := Burbuja new.	curso2 := Burbuja new.	curso3 := Burbuja new.! !!ColegioTest methodsFor: 'tests' stamp: 'Anonymous 5/18/2021 18:05'!test03ColegioClasesPresencialesEsFalseSiMasDelCuarentaPorCientoDeLasBurbujasEstanPinchadas	|persona1 persona2 persona3|	persona1 := Persona new.	persona2 := Persona new.	persona3 := Persona new. 	persona1 nuevoSintoma: 'Tos'.	persona1 nuevoSintoma: 'Dolor de Cabeza'.	persona1 nuevoSintoma: 'Alergia'.		persona2 nuevoSintoma: 'Fiebre'.	persona2 nuevoSintoma: 'Dolor de Cabeza'.	persona2 nuevoSintoma: 'Alergia'.		curso1 agregarA: persona1.	curso2 agregarA: persona2.	curso3 agregarA: persona3.		colegio agregarA: curso1. 	colegio agregarA: curso2.	colegio agregarA: curso3.		self deny: (colegio clasesPresenciales ).	! !!ColegioTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 14:19'!test02ColegioClasesPresencialesEsTrueSiMenosDelCuarentaPorCientoDeLasBurbujasNoEstanPinchadas	|persona1 persona2 persona3|	persona1 := Persona new.	persona2 := Persona new.	persona3 := Persona new. 	persona1 nuevoSintoma: 'Tos'.	persona1 nuevoSintoma: 'Dolor de Cabeza'.	persona1 nuevoSintoma: 'Alergia'.		curso1 agregarA: persona1.	curso2 agregarA: persona2.	curso3 agregarA: persona3.		colegio agregarA: curso1. 	colegio agregarA: curso2.	colegio agregarA: curso3.		self assert: (colegio clasesPresenciales ).	! !!ColegioTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 14:10'!test01ColegioKeyEsElNombreDelColegio	colegio nombre: 'nuevoColegio'.		self assert:(colegio key) equals: 'nuevoColegio'.! !TestCase subclass: #DiagnosticoTest	instanceVariableNames: 'diagnostico'	classVariableNames: ''	package: 'tp1-test'!!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test04DiagnosticoPersonaFueVacunadaCambiaConUnSintomaASospechoso	|listaSintomas|	listaSintomas := Sintomas new.	listaSintomas agregar: 'Dolor de Cabeza'.	diagnostico personaVacunada .		self assert: (diagnostico resumen) equals: 'Sano'.		diagnostico revisar: listaSintomas .		self assert:(diagnostico resumen) equals: 'Sospechoso'. ! !!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test05DiagnosticoConTresSintomasEsSospechoso	|listaSintomas|	listaSintomas := Sintomas new.	listaSintomas agregar: 'Dolor de Cabeza'.	listaSintomas agregar: 'Dolor de Garganta'.	listaSintomas agregar: 'Vomito'.	diagnostico personaVacunada .		self assert: (diagnostico resumen) equals: 'Sano'.		diagnostico revisar: listaSintomas .		self assert:(diagnostico resumen) equals: 'Sospechoso'. ! !!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test06DiagnosticoConTresSintomasUnoHabitualEsPositivo	|listaSintomas|	listaSintomas := Sintomas new.	listaSintomas agregar: 'Dolor de Cabeza'.	listaSintomas agregar: 'Fiebre'.	listaSintomas agregar: 'Vomito'.	diagnostico personaVacunada .		self assert: (diagnostico resumen) equals: 'Sano'.		diagnostico revisar: listaSintomas .		self assert:(diagnostico resumen) equals: 'Positivo'. ! !!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test02DiagnosticoPersonaVacunadaEsSano	diagnostico personaVacunada.	self assert:(diagnostico resumen) equals: 'Sano'. ! !!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test07DiagnosticoConCuatroSintomasEsPositivo	|listaSintomas|	listaSintomas := Sintomas new.	listaSintomas agregar: 'Dolor de Cabeza'.	listaSintomas agregar: 'Dolor de Garganta'.	listaSintomas agregar: 'Vomito'.	listaSintomas agregar: 'alergia'.	diagnostico personaVacunada .		self assert: (diagnostico resumen) equals: 'Sano'.		diagnostico revisar: listaSintomas .		self assert:(diagnostico resumen) equals: 'Positivo'. ! !!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test03DiagnosticoRevisarConUnSintomaEsSospechoso	|listaSintomas|	listaSintomas := Sintomas new.	listaSintomas agregar: 'Dolor de Cabeza'.	diagnostico revisar: listaSintomas .		self assert:(diagnostico resumen) equals: 'Sospechoso'. ! !!DiagnosticoTest methodsFor: 'tests' stamp: 'a 6/15/2021 19:28'!test01DiagnosticoEstadoPorDefectoEsSospechoso	self assert:(diagnostico resumen) equals: 'Sospechoso'. ! !!DiagnosticoTest methodsFor: 'running' stamp: 'Cristian 5/17/2021 13:07'!setUp	diagnostico := Diagnostico new.! !TestCase subclass: #ErrorNoEncontrado	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-test'!!ErrorNoEncontrado methodsFor: 'running' stamp: 'Anonymous 5/18/2021 22:51'!setUp	algovid := AlgoVid new.! !!ErrorNoEncontrado methodsFor: 'tests'!test02PersonaInexistentePuedeCircularMuestraElError	self should: [algovid puedeCircular: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test10BurbujaInexistenteAgregarALaBurbujaMuestraElError	algovid nuevaPersona: 'Cristian'.	self should: [algovid agregarA: 'Cristian' aLaBurbuja:'Grupo1' ] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test05PersonaInexistentePersonaDeRiesgoMuestraElError	self should: [algovid esPersonaDeRiesgo: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test04PersonaInexistenteDiagnosticoDeMuestraElError	self should: [algovid diagnosticoDe: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test07PersonaInexistenteContactoEstrechoEntreYMuestraElError	self should: [algovid contactoEstrechoEntre: 'Juan' y: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test01PersonaInexistenteEstaVacunadxMuestraElError	self should: [algovid estaVacunadx: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests' stamp: 'c 5/19/2021 12:27'!test10BurbujaInexistenteEstaPinchadaMuestraElError	self should: [algovid burbujaPinchada: 'Grupo1'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test03PersonaInexistenteAgregarSintomaAMuestraElError	self should: [algovid agregarSintoma:'Dolor de Cabeza' a: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test09PersonaInexistenteContactoEstrechoEntreYMuestraElError	algovid nuevaPersona: 'jorge'.	self should: [algovid contactoEstrechoEntre: 'Juan' y: 'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test06PersonaInexistenteEsPersonalEsencialMuestraElError	self should: [algovid esPersonalEsencial:  'jorge'] raise: NombreInexistente .! !!ErrorNoEncontrado methodsFor: 'tests'!test08PersonaInexistenteContactoEstrechoEntreYMuestraElError	algovid nuevaPersona: 'Juan'.	self should: [algovid contactoEstrechoEntre: 'Juan' y: 'jorge'] raise: NombreInexistente .! !TestCase subclass: #PersonaTest	instanceVariableNames: 'persona'	classVariableNames: ''	package: 'tp1-test'!!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test15PersonaEsencialConContactoEstrechoConPositivoNoPuedeCircular	|nuevaPersona |	nuevaPersona := Persona new.	nuevaPersona nuevoSintoma: 'Fiebre'.	nuevaPersona nuevoSintoma: 'Dolor de cabeza'.	nuevaPersona nuevoSintoma: 'Tos'.	self assert: (nuevaPersona diagnosticoResumido )equals: 'Positivo'.		persona esPersonalEsencial .	persona contactoEstrechoCon: nuevaPersona .		self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test12PersonaConCuatroSintomasNoHabitualesEsPositivo	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Vomito'.	persona nuevoSintoma: 'Dolor de garganta'.	persona nuevoSintoma: 'Diarrea'.	self assert:(persona diagnosticoResumido ) equals: 'Positivo'.! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 11:57'!test02PuedeCircularPorDefectoNoPuedeSalirself deny: (persona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test09PersonaConTresSintomasNoHabitualesNoPuedeCircular	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Vomito'.	persona nuevoSintoma: 'Alergia'.	self assert:(persona diagnosticoResumido ) equals: 'Sospechoso'.	self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test08PersonaConTresSintomasNoHabitualesEsSospechoso	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Vomito'.	persona nuevoSintoma: 'Alergia'.	self assert:(persona diagnosticoResumido ) equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test05PersonaConSintomaEsSospechoso	persona nuevoSintoma: 'Dolor de Cabeza' .	self assert:(persona diagnosticoResumido ) equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 13:01'!test18PersonaDeRiesgoYEsencialNoPuedeCircular	persona esPersonaDeRiesgo .	persona esPersonalEsencial .	self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 13:00'!test17PersonaDeRiesgoVacunadaNoPuedeCircular	persona esPersonaDeRiesgo .	persona vacunada .	self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 12:02'!test04PersonaVacuandaPuedeCircular	persona vacunada .	self assert:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test07PersonaSospechosaNoPuedeCircular	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Fiebre'.	self assert: (persona diagnosticoResumido) equals: 'Sospechoso'.	self deny:(persona puedeCircular ) .! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test06PersonaVacunadaConSintomasEsSospechoso	persona vacunada .	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Fiebre'.	self assert:(persona diagnosticoResumido ) equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 12:19'!test13PersonaEsencialPorDefectoPuedeCircular	persona esPersonalEsencial .	self assert:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 11:58'!test01AgregarNombreConClaveNombrepersona nombre: 'Cristian'.self assert: (persona key) equals: 'Cristian'.! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test11PersonaConDiagnosticoPositivoNoPuedeCircular	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Vomito'.	persona nuevoSintoma: 'Fiebre'.	self assert:(persona diagnosticoResumido ) equals: 'Positivo'.	self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test14PersonaEsencialConContactoEstrechoConSospechosoNoPuedeCircular	|nuevaPersona |	nuevaPersona := Persona new.	nuevaPersona nuevoSintoma: 'Fiebre'.	self assert: (nuevaPersona diagnosticoResumido )equals: 'Sospechoso'.		persona esPersonalEsencial .	persona contactoEstrechoCon: nuevaPersona .		self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test03PersonaVacuandaDiagnosticoEsSano	persona vacunada .	self assert:(persona diagnosticoResumido ) equals: 'Sano'.	! !!PersonaTest methodsFor: 'tests' stamp: 'a 6/15/2021 17:06'!test10PersonaConTresSintomasUnoHabitualEsPositivo	persona nuevoSintoma: 'Dolor de Cabeza' .	persona nuevoSintoma: 'Vomito'.	persona nuevoSintoma: 'Fiebre'.	self assert:(persona diagnosticoResumido ) equals: 'Positivo'.! !!PersonaTest methodsFor: 'tests' stamp: 'Cristian 5/17/2021 13:00'!test16PersonaDeRiesgoNoPuedeCircular	persona esPersonaDeRiesgo .	self deny:(persona puedeCircular ).! !!PersonaTest methodsFor: 'running' stamp: 'Cristian 5/17/2021 11:57'!setUp	persona := Persona new.! !TestCase subclass: #SintomasTest	instanceVariableNames: 'sintomas'	classVariableNames: ''	package: 'tp1-test'!!SintomasTest methodsFor: 'running' stamp: 'Anonymous 5/18/2021 17:09'!setUp	sintomas := Sintomas new.! !!SintomasTest methodsFor: 'tests' stamp: 'Anonymous 5/18/2021 17:15'!test02SintomasAlgunoHabitualEsFalseSiNoHayAlgunoHabitual	sintomas agregar: 'Dolor de cabeza'.	sintomas agregar: 'alergia'.		self deny: (sintomas algunoHabitual ).! !!SintomasTest methodsFor: 'tests' stamp: 'Anonymous 5/18/2021 17:14'!test01SintomasAlgunoHabitualEsTrueSiHayUnoHabitual	sintomas agregar: 'Fiebre'.		self assert: (sintomas algunoHabitual ).! !